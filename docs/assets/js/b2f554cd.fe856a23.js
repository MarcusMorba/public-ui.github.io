"use strict";(self.webpackChunk_public_ui_website=self.webpackChunk_public_ui_website||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"button-und-link-komponenten","metadata":{"permalink":"/blog/button-und-link-komponenten","source":"@site/blog/2023-01-09.mdx","title":"Button- und Link-Komponenten","description":"Wir bieten heute die Varianten von Button, ButtonLink, Link und LinkButton an. Zuk\xfcnftig werden wir zus\xe4tzlich den ButtonToggle (Toogle-Button) anbieten. Alle semantischen Links unterst\xfctzen dabei nur noch href und alle Buttons nur noch on als semantischen \\"Klick\\". Optisch gibt es Buttons die genau wie Links aussehen und Links die genauso wie Buttons aussehen.","date":"2023-01-09T00:00:00.000Z","formattedDate":"9. Januar 2023","tags":[{"label":"button","permalink":"/blog/tags/button"},{"label":"link","permalink":"/blog/tags/link"}],"readingTime":2.95,"hasTruncateMarker":false,"authors":[{"name":"Martin Oppitz","title":"Architekt@ITZBund & Creator of KoliBri","url":"https://github.com/deleonio","imageURL":"https://avatars.githubusercontent.com/u/6279703","key":"deleonio"}],"frontMatter":{"slug":"button-und-link-komponenten","title":"Button- und Link-Komponenten","authors":"deleonio","tags":["button","link"]},"nextItem":{"title":"\xdcbersetzungen","permalink":"/blog/ubersetzungen"}},"content":"Wir bieten heute die Varianten von Button, ButtonLink, Link und LinkButton an. Zuk\xfcnftig werden wir zus\xe4tzlich den ButtonToggle (Toogle-Button) anbieten. Alle semantischen Links unterst\xfctzen dabei nur noch `_href` und alle Buttons nur noch `_on` als semantischen \\"Klick\\". Optisch gibt es Buttons die genau wie Links aussehen und Links die genauso wie Buttons aussehen.\\n\\nIn der folgenden Tabelle wir eine \xdcbersicht \xfcber die Unterschiede dargestellt:\\n\\n|  Merkmal  | Link | LinkButton |  Button  | ButtonLink | ButtonToggle<sup>\\\\*</sup> |\\n| :-------: | :--: | :--------: | :------: | :--------: | :-----------------------: |\\n|  Design   | Link |   Button   |  Button  |    Link    |          Button           |\\n| Semantik  | `a`  |    `a`     | `button` |  `button`  |         `button`          |\\n|  `_href`  |  \u2795  |     \u2795     |    \u2796    |     \u2796     |            \u2796             |\\n|   `_on`   |  \u2796  |     \u2796     |    \u2795    |     \u2795     |            \u2795             |\\n| `focus()` |  \u2795  |     \u2795     |    \u2795    |     \u2795     |            \u2795             |\\n|   Wert    |  \u2796  |     \u2796     |    \u2796    |     \u2796     |         `boolean`         |\\n\\n<small>\\n\\t<sup>*</sup> Die Komponente ButtonToogle ist aktuell noch nicht umgesetzt. Sie ist aber spezifiziert und im Backlog.\\n</small>\\n\\n## Motivation\\n\\nKoliBri strebt neben einer hohe Standardkonformit\xe4t auch eine sehr gute Wiederverwendbarkeit (Developer Experience DX) an.\\nDiese wird durch die Einheitlichkeit zu den HTML-Attributen und dem sparsamen Umgang mit zus\xe4tlichen Properties adressiert.\\n\\n> **Rationale:** Wenn wir bei einer Link-Komponente, die zum Navigieren gedacht ist, die beiden Verhalten **Navigieren** und **Klick ohne Navigieren**\\n> anbieten w\xfcrden, dann h\xe4\xe4ten wir einen Widerspruch im Verhalten. Auch bei der Verwendung in der Entwicklung m\xfcssten wir die Properties `_href` und `_on`\\n> optional machen und wir k\xf6nnten nicht mehr vor der Falschverwendung warnen (Statische Codepr\xfcfung).\\n\\n## Herausforderungen\\n\\nDiese strenge Auslegung kann dazu f\xfchren, dass es bei der Entwicklung mit anderen Bibliotheken und Frameworks zu Problemen kommt.\\nVorallem dann, wenn diese bei einem Link einen Klick erwarten.\\n\\n### React-Router\\n\\nDer React-Router bildet das Navigieren \xfcber Klicks ab. Bei der Verwendung mit der Link-Komponente gibt es unterschiedliche M\xf6glichkeiten der Implementierung.\\n\\n**Wrapping:**\\n\\n```tsx\\n<Link to=\\"/\\">\\n\\t<KolLink _href=\\"\\">Home</KolLink>\\n</Link>\\n<Link to=\\"/test\\">\\n\\t<KolLink _href=\\"\\">Test</KolLink>\\n</Link>\\n```\\n\\n**Per Klick:**\\n\\n```tsx\\n<KolButtonLink\\n\\t_label=\\"Home\\"\\n\\t_on={{\\n\\t\\tonClick: () => navigate(\\"/\\")\\n\\t}}\\n>\\n\\tHome\\n</KolButtonLink>\\n<KolButtonLink\\n\\t_label=\\"Test\\"\\n\\t_on={{\\n\\t\\tonClick: () => navigate(\\"/test\\")\\n\\t}}\\n>\\n\\tTest\\n</KolButtonLink>\\n```\\n\\n**React-Link:**\\n\\n```tsx\\n<KolLink\\n\\t_href=\\"\\"\\n\\t_label=\\"Home\\"\\n\\tonClick={() => navigate(\\"/\\")}\\n>\\n\\tHome\\n</KolLink>\\n<KolLink\\n\\t_href=\\"\\"\\n\\t_label=\\"Test\\"\\n\\tonClick={() => navigate(\\"/test\\")}\\n>\\n\\tTest\\n</KolLink>\\n```\\n\\n> **Hinweis:** `_href=\\"\\"` ist eigentlich nicht erlaubt.\\n\\nHier gibt es auch ein kleines Code-Beispiel zum <kol-link _href=\\"https://codesandbox.io/s/kolibri-sample-react-link-sample-1jgz8v?file=/src/Navigation.tsx:0-112\\" _label=\\"\\" _target=\\"sandbox\\">Navigieren mit React-Router</kol-link>.\\n\\nDie angegebenen Beispiele zeigen, dass die Link- und ButtonLink-Komponente f\xfcr die direkte Nutzung mit React-Router geeignet sind. Allerdings wird die Link-Komponente auch innerhalb anderer KoliBri-Komponenten verwendet. **Wo das so nicht funktionieren w\xfcrde!**\\n\\n### Server-Side-Rendering\\n\\nDas Server-Side-Rendering ist sehr \xe4hnlich zum React-Router, weil dieser technisch sehr stark durch das Framework Remix getrieben ist.\\nRemix ist ein Framework zum Erstellen von hybriden Client- und Server-Side-Webapplications. Das hei\xdft die Implementierung unterscheiden sich nicht, ob ich die Anwendung sp\xe4ter als Client- oder Server-seitige Anwendung bauen m\xf6chte.\\nF\xfcr Server-Side-Anwendungen m\xfcssen die navigierenden Links mit einem Klick funktionieren, weil diese Anwendungen auf dem Server und nicht im Browser ausgef\xfchrt werden.\\n\\nUm die Wiederverwendbarkeit von KoliBri auch f\xfcr Server-Side-Webapplications zu gew\xe4hrleisten, muss der Seitenwechsel auch durch **Klick ohne Navigieren** m\xf6glich sein.\\n\\n## L\xf6sung\\n\\nUm die Herausforderungen zu l\xf6sen, werden alle Komponenten, denen Link-Definitionen \xfcbergeben werden, erweitert. Wenn diesen Komponenten wahlweise auch ButtonLink-Definitionen \xfcbergeben werden k\xf6nnen, dann k\xf6nnen diese auch Klicks abbilden ohne zu Navigieren, sehen aber optisch weiterhin wie Links aus.\\n\\nFolgende Komponenten m\xfcssen dazu noch erweitert werden:\\n\\n- Breadcrumb\\n- LinkGroup\\n- Nav\\n- SkipNav"},{"id":"ubersetzungen","metadata":{"permalink":"/blog/ubersetzungen","source":"@site/blog/2023-01-04.mdx","title":"\xdcbersetzungen","description":"Als Open Source-Projekt ist es f\xfcr KoliBri wichtig eine Community rund","date":"2023-01-04T00:00:00.000Z","formattedDate":"4. Januar 2023","tags":[{"label":"website","permalink":"/blog/tags/website"},{"label":"seo","permalink":"/blog/tags/seo"},{"label":"spec","permalink":"/blog/tags/spec"}],"readingTime":0.675,"hasTruncateMarker":false,"authors":[{"name":"Martin Oppitz","title":"Architekt@ITZBund & Creator of KoliBri","url":"https://github.com/deleonio","imageURL":"https://avatars.githubusercontent.com/u/6279703","key":"deleonio"}],"frontMatter":{"slug":"ubersetzungen","title":"\xdcbersetzungen","authors":"deleonio","tags":["website","seo","spec"]},"prevItem":{"title":"Button- und Link-Komponenten","permalink":"/blog/button-und-link-komponenten"}},"content":"Als Open Source-Projekt ist es f\xfcr KoliBri wichtig eine Community rund\\num das Thema barrierefreie Basis-Komponenten aufzubauen. Damit auch hierf\xfcr\\neine optimiale Zug\xe4nglichkeit gegeben ist, sollten alle technischen\\nSpezifikationen mindestens in **English** verf\xfcgbar sein. Wie auch in der\\nWissenschaft erm\xf6glicht das Feedback und Mitwirkung aus allen potenziellen\\nBereichen.\\n\\n## Ma\xdfnahmen\\n\\n### Englische Spezifikation\\n\\nDie technische Spezifikation wird automatisiert aus dem Quellcode generiert\\nund synchronisiert. Alle Informationen die wir aus dem Quellcode in die\\nSpezifikation \xfcberf\xfchren, wird in Zukunft ausschlie\xdflich in **English**\\nbereitgestellt.\\n\\nDas betrifft beispielsweise:\\n\\n- API-Spezifikation auf der Website\\n- Details in der IDE-Autovervollst\xe4ndigung\\n- Darstellungen die aus den Meta-Daten des Quellcodes generiert werden\\n\\n### Multilinguale Dokumentation\\n\\nDie Dokumentation wird in Zukunft (mittelfristig) alle Inhalte jeweils prim\xe4r in\\n**Deutsch** und sekund\xe4r in **English** bereitgestellt.\\n\\nDas betrifft beispielsweise:\\n\\n- Anleitungen, Konzepte, Beispiele uvm.\\n- Blog-Beitr\xe4ge"}]}')}}]);