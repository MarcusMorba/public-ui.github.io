(self.webpackChunk_public_ui_storybook=self.webpackChunk_public_ui_storybook||[]).push([[2410],{"./src/components/textarea/0-description/autogen.wc.stories.mdx":(p,g,e)=>{"use strict";e.r(g),e.d(g,{__namedExportsOrder:()=>A,__page:()=>y,default:()=>w});var s=e("./node_modules/core-js/modules/es.object.keys.js"),l=e.n(s),_=e("./node_modules/core-js/modules/es.array.index-of.js"),o=e.n(_),r=e("./node_modules/core-js/modules/es.symbol.js"),u=e.n(r),f=e("./node_modules/core-js/modules/es.function.bind.js"),v=e.n(f),O=e("./node_modules/core-js/modules/es.object.assign.js"),I=e.n(O),B=e("./node_modules/react/index.js"),c=e("./node_modules/@mdx-js/react/dist/esm.js"),k=e("./node_modules/@storybook/addon-docs/dist/esm/index.js"),T=e("./src/components/textarea/0-description/autogen.readme.md"),j=e("./src/components/mermaid.tsx"),x=["components"];function h(){return h=Object.assign?Object.assign.bind():function(n){for(var i=1;i<arguments.length;i++){var a=arguments[i];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n},h.apply(this,arguments)}function C(n,i){if(n==null)return{};var a=D(n,i),t,d;if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(n);for(d=0;d<m.length;d++)t=m[d],!(i.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}function D(n,i){if(n==null)return{};var a={},t=Object.keys(n),d,m;for(m=0;m<t.length;m++)d=t[m],!(i.indexOf(d)>=0)&&(a[d]=n[d]);return a}var M={},P="wrapper";function E(n){var i=n.components,a=C(n,x);return(0,c.kt)(P,h({},M,a,{components:i,mdxType:"MDXLayout"}),(0,c.kt)(k.h_,{title:"Web Components/Textarea/Beschreibung",mdxType:"Meta"}),(0,c.kt)(k.dk,{mdxType:"Description"},T),(0,c.kt)("script",null,"() =>",(0,j.m)()))}E.displayName="MDXContent",E.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var b={title:"Web Components/Textarea/Beschreibung",includeStories:["__page"]},L={};b.parameters=b.parameters||{},b.parameters.docs=Object.assign({},b.parameters.docs||{},{page:function(){return(0,c.kt)(k.aT,{mdxStoryNameToKey:L,mdxComponentAnnotations:b},(0,c.kt)(E,null))}});const w=b;var A=["__page"]},"./src/components/mermaid.tsx":(p,g,e)=>{"use strict";e.d(g,{G:()=>r,m:()=>o});var s=e("./node_modules/react/index.js"),l=e("./node_modules/mermaid/dist/mermaid.core.mjs");let _;const o=u=>{u&&l.Z.initialize(Object.assign({startOnLoad:!0},u)),clearTimeout(_),_=setTimeout(()=>{clearTimeout(_),l.Z.contentLoaded()},500)},r=({code:u,config:f,children:v})=>((0,s.useEffect)(()=>{o(f)},[]),s.createElement("div",null,s.createElement("div",{className:"mermaid"},u)));try{o.displayName="mermaidLoadContent",o.__docgenInfo={description:"",displayName:"mermaidLoadContent",props:{}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#mermaidLoadContent"]={docgenInfo:o.__docgenInfo,name:"mermaidLoadContent",path:"src/components/mermaid.tsx#mermaidLoadContent"})}catch(u){}try{r.displayName="Mermaid",r.__docgenInfo={description:"",displayName:"Mermaid",props:{code:{defaultValue:null,description:"",name:"code",required:!0,type:{name:"string"}},config:{defaultValue:null,description:"",name:"config",required:!1,type:{name:"any"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#Mermaid"]={docgenInfo:r.__docgenInfo,name:"Mermaid",path:"src/components/mermaid.tsx#Mermaid"})}catch(u){}},"./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$":(p,g,e)=>{var s={"./locale":"./node_modules/moment-mini/locale/locale.js","./locale.js":"./node_modules/moment-mini/locale/locale.js"};function l(o){var r=_(o);return e(r)}function _(o){if(!e.o(s,o)){var r=new Error("Cannot find module '"+o+"'");throw r.code="MODULE_NOT_FOUND",r}return s[o]}l.keys=function(){return Object.keys(s)},l.resolve=_,p.exports=l,l.id="./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$"},"./src/components/textarea/0-description/autogen.readme.md":p=>{"use strict";p.exports='# Textarea\n\nDie Komponente **Textarea** stellt ein gr\xF6\xDFeres Eingabefeld f\xFCr Inhalte zur Verf\xFCgung. Im Gegensatz zum\nInputText k\xF6nnen hier auch umfangreiche Inhalte eingegeben werden, die auch mit Zeilenumbr\xFCchen versehen sein k\xF6nnen.\n\n## Konstruktion\n\n### Code\n\n> Um das Zusammenspiel von Komponenten (HTML) und Kontroller (TypeScript) gemeinsam darzustellen, wurden alle Code-Beispiele auf dieser Seite mit den Web Components im TSX geschrieben.\n\n```tsx\n<kol-textarea\n	_resize="none"\n	_rows="5"\n	_value="\n  Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore\n  magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n  gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n  elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos\n  et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor\n  sit amet."\n></kol-textarea>\n```\n\n### Beispiel\n\n<kol-textarea _resize="none" _rows="5" _value="Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.">\n</kol-textarea>\n\n## Verwendung\n\nVerwenden Sie die **Textarea**-Komponente wenn die Eingabe von gr\xF6\xDFeren Textmengen erforderlich ist, z.B. bei der Erfassung eines Anliegens innerhalb eines Formulars.<br/>\nMit Hilfe der Property **`_rows`** kann die H\xF6he der Textarea in Zeilen bestimmt werden.<br/>\n\xDCber die Property **`_resize`** kann zus\xE4tzlich festgelegt werden ob und in welche Richtung die Textarea vergr\xF6\xDFert werden kann. Der Wert **`none`** sperrt die Textarea gegen Gr\xF6\xDFen\xE4nderungen.\n\n<!--### Best practices\n\n### Anwendungsf\xE4lle-->\n\n## Barrierefreiheit\n\n> Die optische Standardausgabe der Komponente ist auf die Umsetzung der Barrierefreiheit hin optimiert. Wenn Sie eigene Custom Styles verwenden, kann das zu einer Einschr\xE4nkung der Barrierefreiheit f\xFChren.\n\n### Tastatursteuerung\n\n| Taste          | Funktion                                                                        |\n| -------------- | ------------------------------------------------------------------------------- | --- |\n| `Tab`          | Fokussiert die Textarea.                                                        |\n| `Pfeil-Tasten` | K\xF6nnen f\xFCr die Navigation im Inhalt der fokussierten Textarea verwendet werden. |     |\n\n## Links und Referenzen\n\n- https://medium.com/@gavyn/til-autofocus-inputs-are-an-accessibility-problem-32ced60c3109\n\n<!-- Auto Generated Below -->\n\n\n## Eigenschaften\n\n| Property           | Attribute        | Description                                                                                                          | Type                                                                                     | Default      |\n| ------------------ | ---------------- | -------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ------------ |\n| `_accessKey`       | `_access-key`    | Gibt an, mit welcher Tastenkombination man das Input ausl\xF6sen oder fokussieren kann.                                 | `string | undefined`                                                                    | `undefined`  |\n| `_adjustHeight`    | `_adjust-height` | Passt die H\xF6he des Eingabefeldes automatisch an den F\xFCllstand an.                                                    | `boolean | undefined`                                                                   | `false`      |\n| `_alert`           | `_alert`         | Gibt an, ob die Fehlermeldung vorgelesen werden soll, wenn es eine gibt.                                             | `boolean | undefined`                                                                   | `true`       |\n| `_disabled`        | `_disabled`      | Gibt an, ob das Eingabefeld aktiviert oder deaktiviert ist.                                                          | `boolean | undefined`                                                                   | `undefined`  |\n| `_error`           | `_error`         | Gibt den Text f\xFCr eine Fehlermeldung an.                                                                             | `string | undefined`                                                                    | `undefined`  |\n| `_hasCounter`      | `_has-counter`   | Gibt an, ob am unteren Rand des Eingabefeldes die Anzahl der Zeichen angezeigt werden soll.                          | `boolean | undefined`                                                                   | `undefined`  |\n| `_hideLabel`       | `_hide-label`    | Gibt an, ob das Eingabefeld kein sichtbares Label haben soll.                                                        | `boolean | undefined`                                                                   | `undefined`  |\n| `_hint`            | `_hint`          | Gibt den Text f\xFCr eine Hinweistext an.                                                                               | `string | undefined`                                                                    | `\'\'`         |\n| `_id` _(required)_ | `_id`            | Gibt die technische ID des Eingabefeldes an.                                                                         | `string`                                                                                 | `undefined`  |\n| `_maxLength`       | `_max-length`    | Gibt an, wie viele Zeichen man maximal eingeben kann.                                                                | `number | undefined`                                                                    | `undefined`  |\n| `_name`            | `_name`          | Gibt den technischen Namen des Eingabefeldes an.                                                                     | `string | undefined`                                                                    | `undefined`  |\n| `_on`              | --               | Gibt die EventCallback-Funktionen f\xFCr das Input-Event an.                                                            | `InputTypeOnBlur & InputTypeOnClick & InputTypeOnChange & InputTypeOnFocus | undefined` | `undefined`  |\n| `_placeholder`     | `_placeholder`   | Gibt den Platzhalter des Eingabefeldes an, wenn es leer ist.                                                         | `string | undefined`                                                                    | `undefined`  |\n| `_readOnly`        | `_read-only`     | Gibt an, ob das Eingabefeld nur lesend ist.                                                                          | `boolean | undefined`                                                                   | `undefined`  |\n| `_required`        | `_required`      | Gibt an, ob das Eingabefeld ein Pflichtfeld ist.                                                                     | `boolean | undefined`                                                                   | `undefined`  |\n| `_resize`          | `_resize`        | Gibt an, ob die Gr\xF6\xDFe des Eingabefeldes ge\xE4ndert werden kann. (https://developer.mozilla.org/de/docs/Web/CSS/resize) | `"both" | "horizontal" | "none" | "vertical" | undefined`                            | `\'vertical\'` |\n| `_rows`            | `_rows`          | Gibt die Anzahl der anzuzeigenden Zeilen des Eingabefeldes an.                                                       | `number | undefined`                                                                    | `undefined`  |\n| `_tabIndex`        | `_tab-index`     | Gibt an, welchen Tab-Index dieses Input hat.                                                                         | `number | undefined`                                                                    | `undefined`  |\n| `_touched`         | `_touched`       | Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/ber\xFChrt wurde.                                        | `boolean | undefined`                                                                   | `false`      |\n| `_value`           | `_value`         | Gibt den Wert des Eingabefeldes an.                                                                                  | `string | undefined`                                                                    | `undefined`  |\n\n\n## Abh\xE4ngigkeiten\n\n### Abh\xE4ngig von\n\n- kol-input\n\n### Graph\n<div class="mermaid">\ngraph TD;\n  kol-textarea --> kol-input\n  kol-input --> kol-icon\n  kol-input --> kol-button-wc\n  kol-input --> kol-alert\n  kol-button-wc --> kol-span-wc\n  kol-button-wc --> kol-tooltip\n  kol-span-wc --> kol-icon\n  kol-tooltip --> kol-badge\n  kol-badge --> kol-span-wc\n  kol-badge --> kol-button-wc\n  kol-alert --> kol-heading-wc\n  kol-alert --> kol-button-wc\n  kol-alert --> kol-icon\n  style kol-textarea fill:#f9f,stroke:#333,stroke-width:4px\n</div>\n\n----------------------------------------------\n\n\n'}}]);
