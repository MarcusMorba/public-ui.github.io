"use strict";(self.webpackChunkroot=self.webpackChunkroot||[]).push([[1531],{17942:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(50959);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},55660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(15882),i=(n(50959),n(17942));const o={slug:"/concepts/swizzling",title:"Swizzling",description:"More complex component requirements can be enabled using Swizzling.",tags:["architecture","arc42","concept"]},a=void 0,c={unversionedId:"concepts/swizzling",id:"concepts/swizzling",title:"Swizzling",description:"More complex component requirements can be enabled using Swizzling.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/20-concepts/07-swizzling.md",sourceDirName:"20-concepts",slug:"/concepts/swizzling",permalink:"/en/docs/concepts/swizzling",draft:!1,tags:[{label:"architecture",permalink:"/en/docs/tags/architecture"},{label:"arc42",permalink:"/en/docs/tags/arc-42"},{label:"concept",permalink:"/en/docs/tags/concept"}],version:"current",sidebarPosition:7,frontMatter:{slug:"/concepts/swizzling",title:"Swizzling",description:"More complex component requirements can be enabled using Swizzling.",tags:["architecture","arc42","concept"]},sidebar:"tutorialSidebar",previous:{title:"Designer",permalink:"/en/docs/concepts/styling/designer"},next:{title:"Expert-slot",permalink:"/en/docs/concepts/expert-slot"}},l={},s=[{value:"Motivation",id:"motivation",level:2},{value:"Definition",id:"definition",level:2},{value:"Variants",id:"variants",level:2},{value:"Wrapping",id:"wrapping",level:3},{value:"Overwriting",id:"overwriting",level:3}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"Numerous, sometimes complex requirements for components of design systems or component libraries would not have to be considered over and over again if there were small-scale, easily reusable basic components to carry these requirements."),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("p",null,"Swizzling is defined as the possibility of either modifying an existing component from the outside or replacing the internal construction. Both pay off in high reusability."),(0,i.kt)("h2",{id:"variants"},"Variants"),(0,i.kt)("h3",{id:"wrapping"},"Wrapping"),(0,i.kt)("p",null,"The easiest method to customize a KoliBri component is wrapping. Here, an own component is built around the KoliBri component (decorator pattern) and individualized on the outside."),(0,i.kt)("h3",{id:"overwriting"},"Overwriting"),(0,i.kt)("p",null,"Another variant of swizzling is the overwriting of the inner component construction. In Web Components, this is often done using slots. In KoliBri, we have introduced the ",(0,i.kt)("kol-link",{_href:"expert-slot",_label:"expert slots"})," for this purpose."))}d.isMDXComponent=!0}}]);