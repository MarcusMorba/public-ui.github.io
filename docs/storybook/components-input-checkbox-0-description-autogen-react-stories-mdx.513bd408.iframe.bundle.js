(self.webpackChunk_public_ui_storybook=self.webpackChunk_public_ui_storybook||[]).push([[1198],{"./src/components/input-checkbox/0-description/autogen.react.stories.mdx":(k,h,e)=>{"use strict";e.r(h),e.d(h,{__namedExportsOrder:()=>A,__page:()=>y,default:()=>P});var s=e("./node_modules/core-js/modules/es.object.keys.js"),_=e.n(s),l=e("./node_modules/core-js/modules/es.array.index-of.js"),o=e.n(l),i=e("./node_modules/core-js/modules/es.symbol.js"),c=e.n(i),p=e("./node_modules/core-js/modules/es.function.bind.js"),v=e.n(p),x=e("./node_modules/core-js/modules/es.object.assign.js"),L=e.n(x),S=e("./node_modules/react/index.js"),m=e("./node_modules/@mdx-js/react/dist/esm.js"),f=e("./node_modules/@storybook/addon-docs/dist/esm/index.js"),O=e("./src/components/input-checkbox/0-description/autogen.readme.md"),C=e("./src/components/mermaid.tsx"),w=["components"];function g(){return g=Object.assign?Object.assign.bind():function(n){for(var d=1;d<arguments.length;d++){var r=arguments[d];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n},g.apply(this,arguments)}function T(n,d){if(n==null)return{};var r=j(n,d),t,a;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(a=0;a<u.length;a++)t=u[a],!(d.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}function j(n,d){if(n==null)return{};var r={},t=Object.keys(n),a,u;for(u=0;u<t.length;u++)a=t[u],!(d.indexOf(a)>=0)&&(r[a]=n[a]);return r}var D={},M="wrapper";function E(n){var d=n.components,r=T(n,w);return(0,m.kt)(M,g({},D,r,{components:d,mdxType:"MDXLayout"}),(0,m.kt)(f.h_,{title:"React/InputCheckbox/Beschreibung",mdxType:"Meta"}),(0,m.kt)(f.dk,{mdxType:"Description"},O),(0,m.kt)("script",null,"() =>",(0,C.m)()))}E.displayName="MDXContent",E.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var b={title:"React/InputCheckbox/Beschreibung",includeStories:["__page"]},I={};b.parameters=b.parameters||{},b.parameters.docs=Object.assign({},b.parameters.docs||{},{page:function(){return(0,m.kt)(f.aT,{mdxStoryNameToKey:I,mdxComponentAnnotations:b},(0,m.kt)(E,null))}});const P=b;var A=["__page"]},"./src/components/mermaid.tsx":(k,h,e)=>{"use strict";e.d(h,{G:()=>i,m:()=>o});var s=e("./node_modules/react/index.js"),_=e("./node_modules/mermaid/dist/mermaid.core.mjs");let l;const o=c=>{c&&_.Z.initialize(Object.assign({startOnLoad:!0},c)),clearTimeout(l),l=setTimeout(()=>{clearTimeout(l),_.Z.contentLoaded()},500)},i=({code:c,config:p,children:v})=>((0,s.useEffect)(()=>{o(p)},[]),s.createElement("div",null,s.createElement("div",{className:"mermaid"},c)));try{o.displayName="mermaidLoadContent",o.__docgenInfo={description:"",displayName:"mermaidLoadContent",props:{}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#mermaidLoadContent"]={docgenInfo:o.__docgenInfo,name:"mermaidLoadContent",path:"src/components/mermaid.tsx#mermaidLoadContent"})}catch(c){}try{i.displayName="Mermaid",i.__docgenInfo={description:"",displayName:"Mermaid",props:{code:{defaultValue:null,description:"",name:"code",required:!0,type:{name:"string"}},config:{defaultValue:null,description:"",name:"config",required:!1,type:{name:"any"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#Mermaid"]={docgenInfo:i.__docgenInfo,name:"Mermaid",path:"src/components/mermaid.tsx#Mermaid"})}catch(c){}},"./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$":(k,h,e)=>{var s={"./locale":"./node_modules/moment-mini/locale/locale.js","./locale.js":"./node_modules/moment-mini/locale/locale.js"};function _(o){var i=l(o);return e(i)}function l(o){if(!e.o(s,o)){var i=new Error("Cannot find module '"+o+"'");throw i.code="MODULE_NOT_FOUND",i}return s[o]}_.keys=function(){return Object.keys(s)},_.resolve=l,k.exports=_,_.id="./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$"},"./src/components/input-checkbox/0-description/autogen.readme.md":k=>{"use strict";k.exports='# Checkbox\n\nDer Input-Typ **_Checkbox_** generiert eine rechteckige Box, die durch Anklicken aktiviert und wieder deaktiviert wird. In aktiviertem Zustand befindet sich ein farbiger Haken in der Box.\n\nEine optische Alternative zur Standard-Checkbox stellt die Ausgabe als **_Switch_** dar. Hierbei wird die Checkbox zu einem Schieberegler gewandelt, der bei Anklicken nach rechts (aktiv) bzw. nach links (inaktiv) verschoben wird.\n\n## Konstruktion\n\n### Code\n\n> Um das Zusammenspiel von Komponenten (HTML) und Kontroller (TypeScript) gemeinsam darzustellen, wurden alle Code-Beispiele auf dieser Seite mit den Web Components im TSX geschrieben.\n\n```tsx\n<kol-input-checkbox _id="meine_checkbox" _name="meine_checkbox">\n	* Ich stimme der <kol-link>Datenschutzerkl\xE4rung zu</kol-link>\n</kol-input-checkbox>\n```\n\n### Beispiel\n\n<kol-input-checkbox _id="meine_checkbox" _name="meine_checkbox">\\* Ich stimme der <kol-link>Datenschutzerkl\xE4rung zu</kol-link></kol-input-checkbox>\n\n## Verwendung\n\nCheckboxen werden als Einzelelement oder als Liste beliebig vieler Checkboxen verwendet. Sie erm\xF6glichen den Nutzer:innen, aus einer vordefinierten Anzahl von M\xF6glichkeiten eine oder mehrere auszuw\xE4hlen.\n\n### Best practices\n\n- Verwenden Sie eine einzelne Checkbox, wenn Sie von den Nutzer:innen eine einfach Best\xE4tigung w\xFCnschen, z.B. Akzeptieren der Datenschutzerkl\xE4rung.\n- Verwenden Sie eine Gruppe von Checkboxen, um den Nutzer:innen die M\xF6glichkeit zu geben einen oder mehrere Werte auszuw\xE4hlen.\n- Vermeiden Sie zu viele Checkboxen, da hierdurch die \xDCbersichtlichkeit verloren geht. Verwenden Sie in diesem Fall eine Select-Box.\n\n## Barrierefreiheit\n\n> Die optische Standardausgabe der Komponente ist auf die Umsetzung der Barrierefreiheit hin optimiert. Wenn Sie eigene Custom Styles verwenden, kann das zu einer Einschr\xE4nkung der Barrierefreiheit f\xFChren.\n\nVermeiden Sie die Verwendung von vielen Checkboxen auf einer Seite, da Ihre Inhalte hierdurch schnell un\xFCbersichtlich und lang werden. Pr\xFCfen Sie in solchen Anwendungsf\xE4llen die Verwendung einer <a href="?path=/story/react-select-beschreibung--page">Select-Box</a>.\n\nAchten Sie darauf, jeder Checkbox ein Label zuzuweisen, da dieses von Screenreadern vorgelesen wird und so eine eindeutige Identifikation des Eingabefeldes erm\xF6glicht.\n\n### Tastatursteuerung\n\n| Taste  | Funktion                                                                                                           |\n| ------ | ------------------------------------------------------------------------------------------------------------------ |\n| `Tab`  | Fokussiert die Checkbox bzw. erm\xF6glicht den Wechsel zwischen Checkboxen einer Liste.                               |\n| `Leer` | Aktiviert bzw. deaktiviert die Checkbox. Der Zustand **_Indeterminate_** ist \xFCber die Tastatur nicht herzustellen. |\n\n## Links und Referenzen\n\n- https://www.w3.org/TR/wai-aria-practices/#checkbox\n- https://medium.com/@gavyn/til-autofocus-inputs-are-an-accessibility-problem-32ced60c3109\n\n<!-- Auto Generated Below -->\n\n\n## Eigenschaften\n\n| Property           | Attribute        | Description                                                                                                                                       | Type                                                                                     | Default      |\n| ------------------ | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ------------ |\n| `_accessKey`       | `_access-key`    | Gibt an, mit welcher Tastenkombination man das Input ausl\xF6sen oder fokussieren kann.                                                              | `string | undefined`                                                                    | `undefined`  |\n| `_alert`           | `_alert`         | Gibt an, ob die Fehlermeldung vorgelesen werden soll, wenn es eine gibt.                                                                          | `boolean | undefined`                                                                   | `true`       |\n| `_checked`         | `_checked`       | Gibt an, ob die Checkbox ausgew\xE4hlt ist oder nicht.                                                                                               | `boolean | undefined`                                                                   | `false`      |\n| `_disabled`        | `_disabled`      | Gibt an, ob das Eingabefeld aktiviert oder deaktiviert ist.                                                                                       | `boolean | undefined`                                                                   | `undefined`  |\n| `_error`           | `_error`         | Gibt den Text f\xFCr eine Fehlermeldung an.                                                                                                          | `string | undefined`                                                                    | `undefined`  |\n| `_hideLabel`       | `_hide-label`    | Gibt an, ob das Eingabefeld kein sichtbares Label haben soll.                                                                                     | `boolean | undefined`                                                                   | `undefined`  |\n| `_hint`            | `_hint`          | Gibt den Text f\xFCr eine Hinweistext an.                                                                                                            | `string | undefined`                                                                    | `\'\'`         |\n| `_id` _(required)_ | `_id`            | Gibt die technische ID des Eingabefeldes an.                                                                                                      | `string`                                                                                 | `undefined`  |\n| `_indeterminate`   | `_indeterminate` | Gibt an, ob die Checkbox weder ausgew\xE4hlt noch nicht ausgew\xE4hlt ist.                                                                              | `boolean | undefined`                                                                   | `undefined`  |\n| `_name`            | `_name`          | Gibt den technischen Namen des Eingabefeldes an.                                                                                                  | `string | undefined`                                                                    | `undefined`  |\n| `_on`              | --               | Gibt die EventCallback-Funktionen f\xFCr das Input-Event an.                                                                                         | `InputTypeOnBlur & InputTypeOnClick & InputTypeOnChange & InputTypeOnFocus | undefined` | `undefined`  |\n| `_required`        | `_required`      | Gibt an, ob die Checkbox ein Pflichtfeld ist.                                                                                                     | `boolean | undefined`                                                                   | `undefined`  |\n| `_tabIndex`        | `_tab-index`     | Gibt an, welchen Tab-Index dieses Input hat.                                                                                                      | `number | undefined`                                                                    | `undefined`  |\n| `_touched`         | `_touched`       | Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/ber\xFChrt wurde.                                                                     | `boolean | undefined`                                                                   | `false`      |\n| `_type`            | `_type`          | <span class="text-red-500">**[DEPRECATED]**</span> Verwende stattdessen das Attribute _variant.<br/><br/>Gibt an, welchen Type das Input haben soll. | `"checkbox" | "switch" | undefined`                                                    | `\'checkbox\'` |\n| `_value`           | `_value`         | Gibt den Wert der Checkbox an.                                                                                                                    | `string | undefined`                                                                    | `undefined`  |\n| `_variant`         | `_variant`       | Gibt an, welchen Type das Input haben soll.                                                                                                       | `"checkbox" | "switch" | undefined`                                                    | `undefined`  |\n\n\n## Abh\xE4ngigkeiten\n\n### Abh\xE4ngig von\n\n- kol-input\n\n### Graph\n<div class="mermaid">\ngraph TD;\n  kol-input-checkbox --> kol-input\n  kol-input --> kol-icon\n  kol-input --> kol-button-wc\n  kol-input --> kol-alert\n  kol-button-wc --> kol-span-wc\n  kol-button-wc --> kol-tooltip\n  kol-span-wc --> kol-icon\n  kol-tooltip --> kol-badge\n  kol-badge --> kol-span-wc\n  kol-badge --> kol-button-wc\n  kol-alert --> kol-heading-wc\n  kol-alert --> kol-button-wc\n  kol-alert --> kol-icon\n  style kol-input-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n</div>\n\n----------------------------------------------\n\n\n'}}]);
