(self.webpackChunk_public_ui_storybook=self.webpackChunk_public_ui_storybook||[]).push([[2012],{"./src/components/input-range/0-description/autogen.react.stories.mdx":(b,f,e)=>{"use strict";e.r(f),e.d(f,{__namedExportsOrder:()=>w,__page:()=>y,default:()=>L});var d=e("./node_modules/core-js/modules/es.object.keys.js"),_=e.n(d),l=e("./node_modules/core-js/modules/es.array.index-of.js"),o=e.n(l),i=e("./node_modules/core-js/modules/es.symbol.js"),m=e.n(i),g=e("./node_modules/core-js/modules/es.function.bind.js"),O=e.n(g),v=e("./node_modules/core-js/modules/es.object.assign.js"),R=e.n(v),B=e("./node_modules/react/index.js"),c=e("./node_modules/@mdx-js/react/dist/esm.js"),k=e("./node_modules/@storybook/addon-docs/dist/esm/index.js"),j=e("./src/components/input-range/0-description/autogen.readme.md"),T=e("./src/components/mermaid.tsx"),C=["components"];function E(){return E=Object.assign?Object.assign.bind():function(n){for(var s=1;s<arguments.length;s++){var r=arguments[s];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n},E.apply(this,arguments)}function M(n,s){if(n==null)return{};var r=D(n,s),t,a;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(a=0;a<u.length;a++)t=u[a],!(s.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}function D(n,s){if(n==null)return{};var r={},t=Object.keys(n),a,u;for(u=0;u<t.length;u++)a=t[u],!(s.indexOf(a)>=0)&&(r[a]=n[a]);return r}var P={},x="wrapper";function h(n){var s=n.components,r=M(n,C);return(0,c.kt)(x,E({},P,r,{components:s,mdxType:"MDXLayout"}),(0,c.kt)(k.h_,{title:"React/InputRange/Beschreibung",mdxType:"Meta"}),(0,c.kt)(k.dk,{mdxType:"Description"},j),(0,c.kt)("script",null,"() =>",(0,T.m)()))}h.displayName="MDXContent",h.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var p={title:"React/InputRange/Beschreibung",includeStories:["__page"]},I={};p.parameters=p.parameters||{},p.parameters.docs=Object.assign({},p.parameters.docs||{},{page:function(){return(0,c.kt)(k.aT,{mdxStoryNameToKey:I,mdxComponentAnnotations:p},(0,c.kt)(h,null))}});const L=p;var w=["__page"]},"./src/components/mermaid.tsx":(b,f,e)=>{"use strict";e.d(f,{G:()=>i,m:()=>o});var d=e("./node_modules/react/index.js"),_=e("./node_modules/mermaid/dist/mermaid.core.mjs");let l;const o=m=>{m&&_.Z.initialize(Object.assign({startOnLoad:!0},m)),clearTimeout(l),l=setTimeout(()=>{clearTimeout(l),_.Z.contentLoaded()},500)},i=({code:m,config:g,children:O})=>((0,d.useEffect)(()=>{o(g)},[]),d.createElement("div",null,d.createElement("div",{className:"mermaid"},m)));try{o.displayName="mermaidLoadContent",o.__docgenInfo={description:"",displayName:"mermaidLoadContent",props:{}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#mermaidLoadContent"]={docgenInfo:o.__docgenInfo,name:"mermaidLoadContent",path:"src/components/mermaid.tsx#mermaidLoadContent"})}catch(m){}try{i.displayName="Mermaid",i.__docgenInfo={description:"",displayName:"Mermaid",props:{code:{defaultValue:null,description:"",name:"code",required:!0,type:{name:"string"}},config:{defaultValue:null,description:"",name:"config",required:!1,type:{name:"any"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/components/mermaid.tsx#Mermaid"]={docgenInfo:i.__docgenInfo,name:"Mermaid",path:"src/components/mermaid.tsx#Mermaid"})}catch(m){}},"./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$":(b,f,e)=>{var d={"./locale":"./node_modules/moment-mini/locale/locale.js","./locale.js":"./node_modules/moment-mini/locale/locale.js"};function _(o){var i=l(o);return e(i)}function l(o){if(!e.o(d,o)){var i=new Error("Cannot find module '"+o+"'");throw i.code="MODULE_NOT_FOUND",i}return d[o]}_.keys=function(){return Object.keys(d)},_.resolve=l,b.exports=_,_.id="./node_modules/moment-mini/locale sync recursive ^\\.\\/.*$"},"./src/components/input-range/0-description/autogen.readme.md":b=>{"use strict";b.exports='# InputRange\n\nDer Input-Typ **Range** erzeugt ein interaktives Element, mit dem Werte durch Verschieben eines Reglers ver\xE4ndert werden k\xF6nnen.\n\n## Konstruktion\n\n### Code\n\n> Um das Zusammenspiel von Komponenten (HTML) und Kontroller (TypeScript) gemeinsam darzustellen, wurden alle Code-Beispiele auf dieser Seite mit den Web Components im TSX geschrieben.\n\n```tsx\n<kol-input-range _id="meine_range" _name="meine_range" _min={100} _max={200} _step={10}>\n	Wertebereich\n</kol-input-range>\n```\n\n### Beispiel\n\n<kol-input-range _id="meine_range" _name="meine_range" _min={100} _max={200} _step={10}>\n  Wertebereich\n</kol-input-range>\n\n## Verwendung\n\n### Best practices\n\n- Achten sie darauf, die Pflichtfelder `id` und `name` korrekt zu setzen.\n\n## Barrierefreiheit\n\n> Die optische Standardausgabe der Komponente ist auf die Umsetzung der Barrierefreiheit hin optimiert. Wenn Sie eigene Custom Styles verwenden, kann das zu einer Einschr\xE4nkung der Barrierefreiheit f\xFChren.\n\n### Tastatursteuerung\n\n| Taste          | Funktion                                 |\n| -------------- | ---------------------------------------- |\n| `Tab`          | Fokussiert das Eingabefeld.              |\n| `Pfeil-Tasten` | Ver\xE4ndern den Wert der Range-Komponente. |\n\n## Links und Referenzen\n\n- https://medium.com/@gavyn/til-autofocus-inputs-are-an-accessibility-problem-32ced60c3109\n- https://www.jotform.com/blog/html5-datalists-what-you-need-to-know-78024/\n\n<!-- Auto Generated Below -->\n\n\n## Eigenschaften\n\n| Property           | Attribute        | Description                                                                          | Type                                                                                                                                                                                                          | Default     |\n| ------------------ | ---------------- | ------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `_accessKey`       | `_access-key`    | Gibt an, mit welcher Tastenkombination man das Input ausl\xF6sen oder fokussieren kann. | `string | undefined`                                                                                                                                                                                         | `undefined` |\n| `_alert`           | `_alert`         | Gibt an, ob die Fehlermeldung vorgelesen werden soll, wenn es eine gibt.             | `boolean | undefined`                                                                                                                                                                                        | `true`      |\n| `_autoComplete`    | `_auto-complete` | Gibt an, ob das Eingabefeld autovervollst\xE4ndigt werden kann.                         | `"off" | "on" | undefined`                                                                                                                                                                                  | `undefined` |\n| `_disabled`        | `_disabled`      | Gibt an, ob das Eingabefeld aktiviert oder deaktiviert ist.                          | `boolean | undefined`                                                                                                                                                                                        | `undefined` |\n| `_error`           | `_error`         | Gibt den Text f\xFCr eine Fehlermeldung an.                                             | `string | undefined`                                                                                                                                                                                         | `undefined` |\n| `_hideLabel`       | `_hide-label`    | Gibt an, ob das Eingabefeld kein sichtbares Label haben soll.                        | `boolean | undefined`                                                                                                                                                                                        | `undefined` |\n| `_hint`            | `_hint`          | Gibt den Text f\xFCr eine Hinweistext an.                                               | `string | undefined`                                                                                                                                                                                         | `\'\'`        |\n| `_icon`            | `_icon`          | Erm\xF6glicht das Anzeigen von Icons links und/oder rechts am Rand des Eingabefeldes.   | `string | undefined | { right: string | KoliBriCustomIcon; left?: string | KoliBriCustomIcon | undefined; } | { right?: string | KoliBriCustomIcon | undefined; left: string | KoliBriCustomIcon; }` | `undefined` |\n| `_id` _(required)_ | `_id`            | Gibt die technische ID des Eingabefeldes an.                                         | `string`                                                                                                                                                                                                      | `undefined` |\n| `_list`            | `_list`          | Gibt die Liste der Vorschlagsw\xF6rter an.                                              | `Option<number>[] | string | undefined`                                                                                                                                                                     | `undefined` |\n| `_max`             | `_max`           | Gibt den Maximalwert des Eingabefeldes an.                                           | `number | undefined`                                                                                                                                                                                         | `undefined` |\n| `_min`             | `_min`           | Gibt den Minimalwert des Eingabefeldes an.                                           | `number | undefined`                                                                                                                                                                                         | `undefined` |\n| `_name`            | `_name`          | Gibt den technischen Namen des Eingabefeldes an.                                     | `string | undefined`                                                                                                                                                                                         | `undefined` |\n| `_on`              | --               | Gibt die EventCallback-Funktionen f\xFCr das Input-Event an.                            | `InputTypeOnBlur & InputTypeOnClick & InputTypeOnChange & InputTypeOnFocus | undefined`                                                                                                                      | `undefined` |\n| `_step`            | `_step`          | Gibt die Schrittweite der Wertver\xE4nderung an.                                        | `number | undefined`                                                                                                                                                                                         | `undefined` |\n| `_tabIndex`        | `_tab-index`     | Gibt an, welchen Tab-Index dieses Input hat.                                         | `number | undefined`                                                                                                                                                                                         | `undefined` |\n| `_touched`         | `_touched`       | Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/ber\xFChrt wurde.        | `boolean | undefined`                                                                                                                                                                                        | `false`     |\n| `_value`           | `_value`         | Gibt den Wert des Eingabefeldes an.                                                  | `number | undefined`                                                                                                                                                                                         | `undefined` |\n\n\n## Abh\xE4ngigkeiten\n\n### Abh\xE4ngig von\n\n- kol-input\n\n### Graph\n<div class="mermaid">\ngraph TD;\n  kol-input-range --> kol-input\n  kol-input --> kol-icon\n  kol-input --> kol-button-wc\n  kol-input --> kol-alert\n  kol-button-wc --> kol-span-wc\n  kol-button-wc --> kol-tooltip\n  kol-span-wc --> kol-icon\n  kol-tooltip --> kol-badge\n  kol-badge --> kol-span-wc\n  kol-badge --> kol-button-wc\n  kol-alert --> kol-heading-wc\n  kol-alert --> kol-button-wc\n  kol-alert --> kol-icon\n  style kol-input-range fill:#f9f,stroke:#333,stroke-width:4px\n</div>\n\n----------------------------------------------\n\n\n'}}]);
