import { JSX } from '../../stencil-public-runtime';
import { ButtonProps } from '../../types/button-link';
import { Stringified } from '../../types/common';
import { InputTypeOnDefault } from '../../types/input/types';
import { KoliBriInputIcon } from '../input-text/types';
import { ComponentApi, States } from './types';
export declare class KolInputFile implements ComponentApi {
  private readonly host?;
  private inputEl;
  private catchEl;
  render(): JSX.Element;
  private readonly controller;
  _accept?: string;
  _accessKey?: string;
  _alert?: boolean;
  _disabled?: boolean;
  _error?: string;
  _hideLabel?: boolean;
  _hint?: string;
  _icon?: Stringified<KoliBriInputIcon>;
  _id: string;
  _multiple?: boolean;
  _name?: string;
  _on?: InputTypeOnDefault;
  _required?: boolean;
  _smartButton?: ButtonProps;
  _tabIndex?: number;
  _touched?: boolean;
  _value?: string;
  state: States;
  constructor();
  validateAccept(value?: string): void;
  validateAccessKey(value?: string): void;
  validateAlert(value?: boolean): void;
  validateDisabled(value?: boolean): void;
  validateError(value?: string): void;
  validateHideLabel(value?: boolean): void;
  validateHint(value?: string): void;
  validateIcon(value?: Stringified<KoliBriInputIcon>): void;
  validateId(value?: string): void;
  validateMultiple(value?: boolean): void;
  validateName(value?: string): void;
  validateOn(value?: InputTypeOnDefault): void;
  validateRequired(value?: boolean): void;
  validateSmartButton(value?: ButtonProps | string): void;
  validateTabIndex(value?: number): void;
  validateTouched(value?: boolean): void;
  validateValue(value?: string): void;
  componentWillLoad(): void;
  private onChange;
}
