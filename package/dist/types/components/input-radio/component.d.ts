import { JSX } from '../../stencil-public-runtime';
import { Stringified } from '../../types/common';
import { InputTypeOnDefault, Option } from '../../types/input/types';
import { Orientation } from '../../types/orientation';
import { ComponentApi, States } from './types';
export declare class KolInputRadio implements ComponentApi {
  private readonly host?;
  render(): JSX.Element;
  private readonly controller;
  _accessKey?: string;
  _alert?: boolean;
  _disabled?: boolean;
  _error?: string;
  _hideLabel?: boolean;
  _hint?: string;
  _id: string;
  _list: Stringified<Option<unknown>[]>;
  _name?: string;
  _on?: InputTypeOnDefault;
  _orientation?: Orientation;
  _required?: boolean;
  _tabIndex?: number;
  _touched?: boolean;
  _value?: Stringified<number | boolean | unknown[] | object>;
  state: States;
  constructor();
  validateAccessKey(value?: string): void;
  validateAlert(value?: boolean): void;
  validateDisabled(value?: boolean): void;
  validateError(value?: string): void;
  validateHideLabel(value?: boolean): void;
  validateHint(value?: string): void;
  validateId(value?: string): void;
  validateList(value?: Stringified<Option<unknown>[]>): void;
  validateName(value?: string): void;
  validateOn(value?: InputTypeOnDefault): void;
  validateOrientation(value?: Orientation): void;
  validateRequired(value?: boolean): void;
  validateTabIndex(value?: number): void;
  validateTouched(value?: boolean): void;
  validateValue(value?: Stringified<unknown>): void;
  componentWillLoad(): void;
  private onChange;
}
