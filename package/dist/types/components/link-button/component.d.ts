import { JSX } from '../../stencil-public-runtime';
import { Generic } from '@public-ui/core';
import { AlternativButtonLinkRole, AriaCurrent, KoliBriButtonVariant, LinkButtonStates, LinkOnCallbacks, LinkTarget, LinkUseCase, OptionalLinkButtonProps, OptionalLinkButtonStates, RequiredLinkButtonProps, RequiredLinkButtonStates } from '../../types/button-link';
import { Stringified } from '../../types/common';
import { Alignment, KoliBriIconProp } from '../../types/icon';
import { TooltipAlignment } from '../tooltip/component';
export declare class KolLinkButton implements Generic.Element.ComponentApi<RequiredLinkButtonProps, OptionalLinkButtonProps, RequiredLinkButtonStates, OptionalLinkButtonStates> {
  private readonly nonce;
  private readonly getRenderValues;
  render(): JSX.Element;
  _ariaControls?: string;
  _ariaCurrent?: AriaCurrent;
  _ariaExpanded?: boolean;
  _ariaLabel?: string;
  _ariaSelected?: boolean;
  _customClass?: string;
  _disabled?: boolean;
  _fill?: boolean;
  _href?: string;
  _icon?: Stringified<KoliBriIconProp>;
  _iconAlign?: Alignment;
  _iconOnly?: boolean;
  _label: string;
  _on?: LinkOnCallbacks;
  _part?: string;
  _role?: AlternativButtonLinkRole;
  _selector?: string;
  _stealth?: boolean;
  _tabIndex?: number;
  _target?: LinkTarget;
  _targetDescription?: string;
  _tooltipAlign?: TooltipAlignment;
  _underline?: boolean;
  _useCase?: LinkUseCase;
  _variant?: KoliBriButtonVariant;
  state: LinkButtonStates;
  validateAriaControls(value?: string): void;
  validateAriaCurrent(value?: AriaCurrent): void;
  validateAriaExpanded(value?: boolean): void;
  validateAriaLabel(value?: string): void;
  validateAriaSelected(value?: boolean): void;
  validateCustomClass(value?: string): void;
  validateDisabled(value?: boolean): void;
  validateFill(value?: boolean): void;
  validateHref(value?: string): void;
  validateIcon(value?: KoliBriIconProp): void;
  validateIconAlign(value?: Alignment): void;
  validateIconOnly(value?: boolean): void;
  validateLabel(value?: string): void;
  validateOn(value?: LinkOnCallbacks): void;
  validatePart(value?: string): void;
  validateRole(value?: AlternativButtonLinkRole): void;
  validateSelector(value?: string): void;
  validateStealth(value?: boolean): void;
  validateTabIndex(value?: number): void;
  validateTarget(value?: LinkTarget): void;
  validateTargetDescription(value?: string): void;
  validateTooltipAlign(value?: TooltipAlignment): void;
  validateUnderline(value?: boolean): void;
  validateUseCase(value?: LinkUseCase): void;
  validateVariant(value?: KoliBriButtonVariant): void;
  componentWillLoad(): void;
}
