import { JSX } from '../../stencil-public-runtime';
import { Generic } from '@public-ui/core';
import { KoliBriButtonVariant, KoliBriButtonVariantCustomClass } from '../../types/button-link';
import { TooltipAlignment } from '../tooltip/component';
import { KoliBriPaginationButtonCallbacks } from './types';
import { Stringified } from '../../types/common';
import { Option } from '../../types/input/types';
export declare type PaginationHasButton = {
  first: boolean;
  last: boolean;
  next: boolean;
  previous: boolean;
};
export declare type RequiredProps = {
  on: KoliBriPaginationButtonCallbacks;
  page: number;
  total: number;
};
export declare type OptionalProps = KoliBriButtonVariantCustomClass & {
  boundaryCount: number;
  hasButtons: boolean | Stringified<PaginationHasButton>;
  pageSize: number;
  pageSizeOptions: Stringified<number[]>;
  siblingCount: number;
  tooltipAlign: TooltipAlignment;
};
declare type RequiredStates = {
  boundaryCount: number;
  hasButtons: PaginationHasButton;
  page: number;
  pageSize: number;
  pageSizeOptions: Option<number>[];
  on: KoliBriPaginationButtonCallbacks;
  siblingCount: number;
  total: number;
};
declare type OptionalStates = KoliBriButtonVariantCustomClass & {
  tooltipAlign: TooltipAlignment;
};
declare type States = Generic.Element.Members<RequiredStates, OptionalStates>;
export declare class KolPagination implements Generic.Element.ComponentApi<RequiredProps, OptionalProps, RequiredStates, OptionalStates> {
  private readonly nonce;
  private readonly calcCount;
  private readonly getCount;
  render(): JSX.Element;
  _boundaryCount?: number;
  _customClass?: string;
  _hasButtons?: boolean | Stringified<PaginationHasButton>;
  _page: number;
  _pageSize: number;
  _pageSizeOptions: Stringified<number[]>;
  _on: KoliBriPaginationButtonCallbacks;
  _siblingCount?: number;
  _tooltipAlign?: TooltipAlignment;
  _total: number;
  _variant?: KoliBriButtonVariant;
  state: States;
  private onClick;
  private onChangePage;
  private onChangePageSize;
  private readonly onGoToFirst;
  private readonly onGoToEnd;
  private readonly onGoBackward;
  private readonly onGoForward;
  private getUnselectedPageButton;
  private getSelectedPageButton;
  validateBoundaryCount(value?: number): void;
  validateCustomClass(value?: string): void;
  validateHasButtons(value?: string | boolean | Stringified<PaginationHasButton>): void;
  validateOn(value?: KoliBriPaginationButtonCallbacks): void;
  validatePage(value?: number): void;
  private beforePageSize;
  private syncPage;
  private beforePageSizeOptions;
  validatePageSize(value?: number): void;
  validatePageSizeOptions(value?: Stringified<number[]>): void;
  validateSiblingCount(value?: number): void;
  validateTotal(value?: number): void;
  validateTooltipAlign(value?: TooltipAlignment): void;
  validateVariant(value?: KoliBriButtonVariant): void;
  componentWillLoad(): void;
}
export {};
